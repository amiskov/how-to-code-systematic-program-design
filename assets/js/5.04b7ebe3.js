(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{169:function(t,s,e){t.exports=e.p+"assets/img/failed_tests_with_stub.b1e328dc.png"},170:function(t,s,e){t.exports=e.p+"assets/img/not_enough_tests.b2e2c624.png"},181:function(t,s,e){"use strict";e.r(s);var n=[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"_1b-how-to-design-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1b-how-to-design-functions","aria-hidden":"true"}},[this._v("#")]),this._v(" 1b: How to Design Functions")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Design is the process of going from a poorly formed problem to a well structured solution.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"module-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module-overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Module Overview")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Научиться применять рецепт для создания функций, оперирующих простыми данными;")]),this._v(" "),s("li",[this._v("Научиться читать функции и разбирать разные элементы их дизайна;")]),this._v(" "),s("li",[this._v("Научиться проверять разные элементы функции на доступность, простоту, ясность и консистентность;")]),this._v(" "),s("li",[this._v("Научиться определять, на сколько рецепт, по которому написана функция, решает задачу.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Be able to use the How to Design Functions (HtDF) recipe to design functions that operate on primitive data.")]),this._v(" "),s("li",[this._v("Be able to read a complete function design and identify its different elements.")]),this._v(" "),s("li",[this._v("Be able to evaluate the different elements for clarity, simplicity and consistency with each other.")]),this._v(" "),s("li",[this._v("Be able to evaluate the entire design for how well it solves the given problem.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"htdf-recipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htdf-recipe","aria-hidden":"true"}},[this._v("#")]),this._v(" HtDF Recipe")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ol",[e("li",[t._v("Сигнатура, назначение, заглушка (Signature, purpose and stub).")]),t._v(" "),e("li",[t._v("Примеры-тесты (define examples, wrap each in "),e("code",[t._v("(check-expect ...)")]),t._v(").")]),t._v(" "),e("li",[t._v("Шаблон (Template and inventory).")]),t._v(" "),e("li",[t._v("Тело функции (Code the function body).")]),t._v(" "),e("li",[t._v("Тестирование и исправление (Test and debug until correct).")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("Объяснялочка")]),t._v(" "),e("p",[t._v("Термины «аргумент», «параметр» и «входящее значение» в тексте ниже можно считать эквивалентными.")]),t._v(" "),e("p",[t._v("Если посмотреть на вопрос по-задротски, то параметры функции — это переменные, используемые в объявлении функции. Аргументы — это реальные значения, которые передаются в функцию при её вызове:")]),t._v(" "),e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; n - параметр")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 4 - аргумент")]),t._v("\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1-сигнатура-назначение-загnушка"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-сигнатура-назначение-загnушка","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. Сигнатура, назначение, заглушка")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Design a function that consumes a number and produces twice that number. Call your function double. Follow the HTdF recipe and show the stub and template.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"сигнатура"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#сигнатура","aria-hidden":"true"}},[this._v("#")]),this._v(" Сигнатура")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-scheme extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scheme"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; Number -> Number")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-scheme extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scheme"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; Number, Number, Bool -> Number")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"назначение"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#назначение","aria-hidden":"true"}},[this._v("#")]),this._v(" Назначение")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Назначение (purpose, цель, описание) — краткое, "),s("em",[this._v("однострочное")]),this._v(" описание того, что функция возвращает с учетом того, что она принимает. Назначение расширяет сигнатуру, добавляет в нее смысл. Сигнатура говорит о типе значений, а назначение говорит, что мы должны получить из входных параметров.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-scheme extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scheme"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; produce 2 times the given number")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-scheme extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scheme"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; Number -> Number")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; Принимает длину стороны квадрата, возвращает его площадь.")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("То есть назначение "),s("em",[this._v("придает смысл типам, обозначенным в сигнатуре")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-scheme extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scheme"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; Number -> Number")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[this._v(";; produce 2 times the given number")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"загnушка"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#загnушка","aria-hidden":"true"}},[this._v("#")]),this._v(" Заглушка")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Заглушка должна иметь правильное имя функции, принимать нужное число параметров, возвращать заглушечный результат нужного типа (например, "),s("code",[this._v("0")]),this._v(" для чисел, "),s("code",[this._v("true")]),this._v(" для булевых значений и т.д.):")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Number -> Number                      ; сигнатура")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce 2 times the given number      ; назначение")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; заглушка")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-примеры-тесты"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-примеры-тесты","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. Примеры-тесты")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Number -> Number                      ; сигнатура")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce 2 times the given number      ; назначение")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; заглушка")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Запускаем — тесты провалятся т.к. сейчас наша функция всегда возвращает "),s("code",[this._v("0")]),this._v(". Зато мы увидим, выполнились ли все тесты. Если выполнились, значит мы их написали верно и можно идти дальше. Тут выполнились 2 теста, все ок:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(169),alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("Объяснялочка")]),this._v(" "),s("p",[this._v("Каждый записанный по рецепту шаг помогает записать следующий. Например, сигнатура помогает написать назначение и заглушку, потому что указывает типы и количество принимаемых значений и тип возвращаемого значения.")]),this._v(" "),s("p",[this._v("По сигнатуре видно, что наша функция принимает число и возвращает число. Значит в назначении нужно указать, чем является это за число, а в заглушке использовать что-то, что является числом в качестве возвращаемого значения ("),s("code",[this._v("0")]),this._v(" в нашем случае). И т.д.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-шабnон"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-шабnон","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. Шаблон")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("...")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; функция делает "что-то" с `n`')]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("The template is really trying to tell you: hey, here's the stuff you have to work with.")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Number -> Number                      ; сигнатура")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce 2 times the given number      ; назначение")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (double n)  0)                  ; заглушка")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; шаблон")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("...")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_4-теnо-функции"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-теnо-функции","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. Тело функции")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Копируем шаблон и вместо "),s("code",[this._v("...")]),this._v(" пишем реализацию. Сам шаблон комментируем (далее по курсу его можно будет удалять, но для начала рекомендуется оставить перед глазами). Используем все, что узнали и записали на предыдущих шагах.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; то же самое, но явно")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; то же самое, но явно")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Ага, понятно. Результат всегда в 2 раза больше аргументов, значит в теле функции нужно написать "),s("code",[this._v("(* n 2)")]),this._v(":")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Number -> Number                      ; сигнатура")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce 2 times the given number      ; назначение")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (double n)  0)                  ; заглушка")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (double n)                      ; шаблон")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";    (... n))")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; тело функции")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5-тестирование-и-исправnения"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-тестирование-и-исправnения","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. Тестирование и исправления")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"пример-функции-со-строками"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#пример-функции-со-строками","aria-hidden":"true"}},[this._v("#")]),this._v(" Пример функции со строками")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Design a function that pluralizes a given word. (Pluralize means to convert the word to its plural form.) For simplicity you may assume that just adding s is enough to pluralize a word.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Написать функцию, которая возвращает множественное число переданного слова (добавление "),s("code",[this._v("s")]),this._v(" в конце достаточно).")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; String -> String")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(';; Produce the given string with "s" added to the end.')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pluralize")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hat"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hats"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pluralize")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"car"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cars"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('; (define (pluralize w) "")')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; (define (pluralize w)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";  (... w))")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pluralize")]),t._v(" w"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("string-append")]),t._v(" w "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Sometimes a program we design doesn't work properly. The program might get an error or a test might fail. One useful skill in trying to find the problem is to scan over the design elements looking for inconsistencies. Does the purpose match the signature? Do the tests match the signature and purpose? Does the stub match what comes before it? Does the function header match the signature and purpose? Does the function body match the signature, purpose and tests?")]),this._v(" "),s("p",[this._v("Often times looking for an inconsistency between different parts of these is enough to find the bug and make it clear what needs to be fixed.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"отnадка"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#отnадка","aria-hidden":"true"}},[this._v("#")]),this._v(" Отладка")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("в самом тесте (вызов функции или ожидаемый результат могут быть некорректны);")]),this._v(" "),s("li",[this._v("в определении функции;")]),this._v(" "),s("li",[this._v("и определение и тест некорректны.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("Хозяйке на заметку")]),this._v(" "),s("p",[this._v("Проверить нужно сначала тесты, а потом уже саму функцию, чтобы ненароком её не испортить.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"рецепт-не-по-шагам"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#рецепт-не-по-шагам","aria-hidden":"true"}},[this._v("#")]),this._v(" Рецепт не по шагам")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("It's a structured process, but it's not a locked-in waterfall process.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Иногда может быть не ясна сигнатура и в этом случае можно начать с примеров, а к сигнатуре вернуться позже. "),s("strong",[this._v("Только не надо сразу врываться и писать тело функции")]),this._v(", это похерит весь дизайн-процесс.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"выбор-типа-данных-в-сигнатуре"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#выбор-типа-данных-в-сигнатуре","aria-hidden":"true"}},[this._v("#")]),this._v(" Выбор типа данных в сигнатуре")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Например, нужно посчитать площадь прямоугольника. Длина и ширина в Ракете задаются в пикселях, а они не могут быть десятичные или еще какие-то. Пиксели дискретны и могут быть только целочисленные (натуральные). Поэтому сигнатура будет не "),s("code",[this._v("Image -> Number")]),this._v(", а "),s("code",[this._v("Image -> Natural")]),this._v(":")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),t._v(" 2htdp/image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Image -> Natural")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Produces image's area (width * height).")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-area")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rectangle")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solid"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-area")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rectangle")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("22.2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solid"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; pixels are always integers:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; (define (image-area img) 0)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; (define (image-area img)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";     (... img))")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-area")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-height")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-width")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("В примере выше вполне возможно по привычке сначала указать "),s("code",[this._v("Number")]),this._v(", а в процессе понять, что нужен "),s("code",[this._v("Natural")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"poorly-formed-problems"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#poorly-formed-problems","aria-hidden":"true"}},[this._v("#")]),this._v(" Poorly Formed Problems")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Design is the process of going from a poorly formed problem to a well structured solution. So making the problem more specific is part of the design process.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Пример такой задачи: определите, является ли картинка высокой. Что значит высокой? У высокой картинки высота больше ширины. Значит более конкретно задачу можно сформулировать так: напишите функцию, которая вернет "),s("code",[this._v("true")]),this._v(", если высота картинки больше её ширины.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),t._v(" 2htdp/image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Image -> Boolean                  ; сигнатура")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce true if image is tall     ; назначение")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Строка назначения в функции, которая возвращает "),s("code",[this._v("true")]),this._v(" или "),s("code",[this._v("false")]),this._v(" должна объяснять, как интерпретировать этот ответ. В данном случае "),s("code",[this._v("true")]),this._v(" означает, что картинка высокая.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Функции-предикаты в Racket принято заканчивать вопросительным знаком: "),s("code",[this._v("tall?")]),this._v(". В других языках или командах могут быть свои соглашения. Например, часто такие функции начинаться с префикса "),s("code",[this._v("is")]),this._v(": "),s("code",[this._v("isTall()")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("В теле функции нам нужно сравнить высоту и ширину картинки и вернуть "),s("code",[this._v("true")]),this._v(", если высота больше или "),s("code",[this._v("false")]),this._v(", если нет. Можно использовать "),s("code",[this._v("if")]),this._v(":")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Image -> Boolean                                           ; сигнатура")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce true if image is tall                              ; назначение")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tall?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rectangle")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solid"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" true"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; пример-тест")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (tall? img) false)                                   ; заглушка")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (tall? img)                                          ; шаблон")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";  (... img))")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tall?")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; функция")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-height")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-width")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      true\n      false"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Запустив такую функцию мы увидим, что DrRacket подсветил "),s("code",[this._v("false")]),this._v(":")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(170),alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Это значит, что при запуске тестов "),s("code",[this._v("false")]),this._v(" никогда не был возвращен.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("Объяснялочка")]),t._v(" "),e("p",[t._v("DrRacket автоматически проверяет покрытие кода тестами. Если в "),e("code",[t._v("if")]),t._v(" подсвечивается какое-то возвращаемое значение, значит для этого случая не написан тест (при запуске тестов это значение ни разу не возвращалось).")]),t._v(" "),e("p",[t._v("— "),e("strong",[t._v("Так сколько нужно тестов для функции?")]),e("br"),t._v("\n— Тестов для функции должно быть столько, сколько нужно для отработки всех вариантов её выполнения.")]),t._v(" "),e("p",[t._v("Например, для функции "),e("code",[t._v("tall?")]),t._v(" нужно проверить 3 варианта:")]),t._v(" "),e("ol",[e("li",[t._v("Высота больше ширины ("),e("code",[t._v("true")]),t._v(", картинка высокая).")]),t._v(" "),e("li",[t._v("Высота меньше ширины ("),e("code",[t._v("false")]),t._v(", картинки невысокая).")]),t._v(" "),e("li",[t._v("Ширина равна высоте, граничный случай (тоже "),e("code",[t._v("false")]),t._v(", картинки невысокая).")])]),t._v(" "),e("p",[t._v("Граничный случай, он же boundary value, он же corner case. Граничные случаи также нужно учитывать в тестах.")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-scheme extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scheme"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),t._v(" 2htdp/image"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; Image -> Boolean")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";; produce true if image is tall (height is greater than width)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tall?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rectangle")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solid"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" true"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tall?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rectangle")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solid"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" false"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check-expect")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tall?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rectangle")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"solid"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" false"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (tall? img) false)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";(define (tall? img)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";  (... img))")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tall?")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-height")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("image-width")]),t._v(" img"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; true, если больше,")]),t._v("\n                                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; false в остальных случаях.")]),t._v("\n                                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; if не нужен.")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"граничные-сnучаи"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#граничные-сnучаи","aria-hidden":"true"}},[this._v("#")]),this._v(" Граничные случаи")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Написать пример-тест для него;")]),this._v(" "),s("li",[this._v("Обновить уже записанные по рецепту шаги (назначение, иногда сигнатуру, может даже другие тесты);")]),this._v(" "),s("li",[this._v("Исправить или дополнить тело функции.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"проверка-заданий-на-edx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#проверка-заданий-на-edx","aria-hidden":"true"}},[this._v("#")]),this._v(" Проверка заданий на edX")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("все хорошо отформатировано")]),this._v(" "),s("li",[this._v("нет лишних ненужных комментариев")]),this._v(" "),s("li",[this._v("нет лишнего вспомогательного кода (экспериментов в процессе решения)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("HTDF составляющие должны быть корректны и понятны и соответствовать рецепту;")]),this._v(" "),s("li",[this._v("Хорошо подобрано имя функции;")]),this._v(" "),s("li",[this._v("Тесты должны проходить и покрытие кода должно быть полное.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("функция должна решать поставленную задачу;")]),this._v(" "),s("li",[this._v("неопределенности в постановке задачи должны быть преодолены в процессе выполнения HTDF.")])])}],a=e(0),r=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("Что значит дизайн:")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("Цель модуля:")]),t._v(" "),t._m(3),t._v(" "),e("p",[t._v("In English:")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),e("p",[t._v("Рецепт помогает составить правильное представление о функции, которую нужно записать в виде кода. Его не нужно запоминать, но нужно научиться им пользоваться как руководством при проектировании функций. И выработать привычку к написанию продуманного кода.")]),t._v(" "),e("p",[t._v("Рецепт нужен для того, чтобы раздробить большую задачу на несколько мелких и дать четкие пошаговые рекомендации. Это очень хорошо для начинающих.")]),t._v(" "),e("p",[t._v("Совсем простые функции с использованием рецепта выглядят натянутыми, зато сложные функции с использованием рецепта написать проще и результат будет качественнее.")]),t._v(" "),e("p",[t._v("Рецепт состоит из следующих шагов:")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),e("p",[t._v("Для примера рассмотрим такую задачу:")]),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("То есть нужно написать простую функцию, которая принимает значение и возвращает его умноженным на 2.")]),t._v(" "),t._m(10),t._v(" "),e("p",[t._v("Здесь сигнатура функции — это тип данных, которые функция принимает и тип данных возвращаемого значения. Типы данных указываются с большой буквы, возвращаемый тип указывается после стрелки.")]),t._v(" "),e("p",[t._v("У функции из примера сигнатура будет такая:")]),t._v(" "),t._m(11),e("p",[t._v("Если аргументов несколько, то указываются все их типы через запятую до стрелки:")]),t._v(" "),t._m(12),e("p",[t._v("Это первая строка.")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),e("p",[t._v("Например, наша функция возвращает аргумент, умноженный на два:")]),t._v(" "),t._m(15),e("p",[t._v("Назначение «принимает число и возвращает число» — плохое, оно дублирует сигнатуру. Нужно конкретно указывать, что именно будет возвращено и что за параметры приходят. Например, если нужно посчитать площадь квадрата по его стороне, то можно написать такое назначение:")]),t._v(" "),t._m(16),t._m(17),t._v(" "),e("p",[t._v("Важно записать назначение в одну строку. Иногда это бывает сложно, но усилия на формулировку однострочного назначения позволят лучше понять, что должна выполнять функция.")]),t._v(" "),e("p",[t._v("Сигнатура и назначение всегда остаются в комментарии перед функцией:")]),t._v(" "),t._m(18),t._m(19),t._v(" "),e("p",[t._v("Заглушка (stub) — это временный код, псевдореализация с фейковым возвращаемым значением. Заглушка позволяет убедится, что тесты, которые мы добавим на следующем шаге, запускаются.")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),e("p",[t._v("Примеры-тесты — это вызовы нашей функции с реальными значениями, результат которых проверяется функцией "),e("a",{attrs:{href:"https://docs.racket-lang.org/htdp-langs/beginner.html#%28form._%28%28lib._lang%2Fhtdp-beginner..rkt%29._check-expect%29%29",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("(check-expect ...)")]),e("OutboundLink")],1),t._v(". Таким образом примеры и тесты в Racket работают вместе.")]),t._v(" "),e("p",[t._v("Примеры-тесты вставляются перед заглушкой:")]),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),e("p",[t._v("Если не все тесты выполнились и упали, начит в каких-то из них есть ошибки, которые нужно исправить.")]),t._v(" "),e("p",[t._v("Важно убедиться, что тесты написаны хорошо как можно раньше (выполняются с заглушкой и падают), перед реализацией самой функции. Потому что если в тест закралась ошибка (не выполнится при запуске с заглушкой), то при работе над более сложной функцией можно потерять много времени.")]),t._v(" "),e("p",[t._v("Имея под рукой примеры и тесты, функцию проще реализовать. Становится понятнее, как она должна себя вести, какое значение должна возвращать в зависимости от аргументов, какой у нее должен быть синтаксис. Об этом можно будет не думать на этапе работы с телом функции, где задачи уже будут алгоритмические.")]),t._v(" "),e("p",[t._v("В примерах-тестах нужно использовать разные аргументы. Например, если функция принимает число, то числа могут быть отрицательными, десятичными дробями, нулем и т.д.")]),t._v(" "),e("p",[t._v("Если сигнатуры верные, типы ожидаемых и возвращаемых величин совпадают. Это важно, потому что в сложных функциях вероятность допустить ошибки в тестах возрастает.")]),t._v(" "),e("p",[t._v("Как только тесты проверены, заглушку можно закоментить (далее по курсу она удаляется).")]),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),e("p",[t._v("Тело шаблона — набросок функции (outline), который будет использован как основа для финальной функции:")]),t._v(" "),t._m(28),t._m(29),t._v(" "),e("p",[t._v("После 3-го шага получим:")]),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),e("p",[t._v("Помогает разбор записанных примеров. Нужно разбить их на составные части, чтобы более явно увидеть, каким образом получается результат:")]),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),e("p",[t._v("Запустить программу. Если тесты не выполняются, найти и исправить ошибки.")]),t._v(" "),t._m(37),t._v(" "),e("p",[t._v("Задача:")]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),e("p",[t._v("Реализация по рецепту:")]),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._v(" "),e("p",[t._v("Если тест провалился на уже написанной функции, это значит, что есть ошибка:")]),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),e("p",[t._v("Рецепт HTdF позволяет некоторые вольности в реализации шагов:")]),t._v(" "),t._m(46),t._v(" "),e("p",[t._v("Мы можем возвращаться назад на шаг или несколько шагов, исправлять ошибки, дополнять или уточнять детали. Например, сигнатуру неправильно написали, дошли до шаблона, заметили ошибку, вернулись и поправили — это норма.")]),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),e("p",[t._v("В сигнатуре нужно указывать самый специфичный, самый четкий тип, который возможен.")]),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),e("p",[t._v("Четкий тип данных способствует лучшему пониманию и помогает при отладке.")]),t._v(" "),t._m(52),t._v(" "),e("p",[t._v("В реальной жизни задачи редко бывают четкими. Часть процесса проектирования — сделать задачу структурированной и хорошо в ней разобраться:")]),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),e("p",[t._v("Сигнатура и назначение для этой функции:")]),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),e("p",[t._v("Добавим нужные тесты в функцию.")]),t._v(" "),e("p",[t._v("Учтём граничное значение и обновим строку назначения: уточним, что картинка считается высокой только когда высота больше ширины.")]),t._v(" "),e("p",[t._v("А ещё код можно упростить. Условие внутри "),e("code",[t._v("if")]),t._v(" со знаком "),e("a",{attrs:{href:"https://docs.racket-lang.org/htdp-langs/beginner.html#%28def._htdp-beginner._%28%28lib._lang%2Fhtdp-beginner..rkt%29._~3e%29%29",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v(">")]),e("OutboundLink")],1),t._v(" само по себе возвращает булево значение, поэтому вместо "),e("code",[t._v("if")]),t._v(" можно оставить только его:")]),t._v(" "),t._m(64),t._m(65),t._v(" "),e("p",[t._v("Часто граничные случаи вылезают в процессе работы над функцией. Как только такой случай вылез, нужно:")]),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),e("p",[t._v("Оценки: Poor, Fair, Great.")]),t._v(" "),e("p",[t._v("Commit ready:")]),t._v(" "),t._m(68),t._v(" "),e("p",[t._v("Design Completeness: представлены все шаги HTDF-рецепта и все они валидны (тесты запускаются, нормально сформулированы сигнатура и назначение, есть заглушка и шаблон).")]),t._v(" "),e("p",[t._v("Internal Quality:")]),t._v(" "),t._m(69),t._v(" "),e("p",[t._v("Problem Satisfied:")]),t._v(" "),t._m(70)])},n,!1,null,null,null);s.default=r.exports}}]);